version: 2.1

jobs:
  test:
    machine: true      
    steps:
      - checkout
      - run:
          name: Check docker version
          command: |
            docker --version
            docker-compose --version
            pwd

  build_parent:
    machine: true
    steps:
      - checkout
      - run:
          name: Docker login
          command: |
            docker run --rm -it -e AWS_ACCESS_KEY_ID=$ACCESS_KEY_ID_ENV_VAR_NAME \
            -e AWS_SECRET_ACCESS_KEY=$SECRET_ACCESS_KEY_ENV_VAR_NAME \
            -e AWS_DEFAULT_REGION=$AWS_REGION_ENV_VAR_NAME \
            amazon/aws-cli ecr get-login-password --region $AWS_REGION_ENV_VAR_NAME | cut -c 5- | docker login \
            --username AWS --password-stdin ${AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME}
      - run:
          name: Docker build parent
          command: |
            pwd && ls -lah
            cd Nginx && ls -lah
            docker build -t nginx:parent -f Dockerfile_parent .
      - run:
          name: Docker Image check
          command: docker image ls
      - run:
          name: push to ecr
          command: |
            docker tag nginx:parent $AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME/nginx_parent:$(echo $CIRCLE_SHA1 | cut -c -8)
            docker push $AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME/nginx_parent:$(echo $CIRCLE_SHA1 | cut -c -8)
            docker tag nginx:parent $AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME/nginx_parent:latest
            docker push $AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME/nginx_parent:latest
  build_child_1:
    machine: true
    steps:
      - checkout
      - run:
          name: build child_1
          command: |
            cd Angular_example && ls -lah
            docker build -t child_1 -f Dockerfile_child .
      - run:
          name: Docker Image check
          command: docker image ls
      - run:
          name: push to ecr
          command: |
            echo "docker tag child_1 $AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME/child_1:$(echo $CIRCLE_SHA1 | cut -c -8)"
            echo "docker push $AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME/child_1:$(echo $CIRCLE_SHA1 | cut -c -8)"
  build_child_2:
    machine: true
    steps:
      - checkout
      - run:
          name: build child_2
          command: |
            cd App_example && ls -lah
            docker build -t child_2 -f Dockerfile .
      - run:
          name: Docker Image check
          command: docker image ls
      - run:
          name: push to ecr
          command: |
            echo "docker tag child_2 $AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME/child_2:$(echo $CIRCLE_SHA1 | cut -c -8)"
            echo "docker push $AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME/child_2:$(echo $CIRCLE_SHA1 | cut -c -8)"
workflows:
  build_and_push_image:
    jobs:
      - test
      - build_parent:
          requires:
            - test
      - build_child_1:
          requires:
            - build_parent
      - build_child_2:
          requires:
            - build_parent
      - build_child_2:
          requires:
            - build_parent
